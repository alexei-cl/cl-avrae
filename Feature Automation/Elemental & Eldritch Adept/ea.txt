!snippet ea <drac2>

ch=character()
args = argparse(&ARGS&)

damageTypes = ['acid','cold','fire','lightning','thunder','necrotic','radiant','force','psychic']
prefix="Elemental"
out=' '

if 'True' in args.get('ea'):
  return f'-f "{Prefix} Adept Error|Please use `-ea <damage type>`|\nValid damage types: `{""" """.join(str(x) for x in damageTypes}`"'
else:
  dType=args.get('ea')[0]
  for x in damageTypes:
    if dType in x:
      dType=x
      if dType in ['necrotic','radiant','force','psychic']:
        prefix="Mystic"
      break
  return f'-f "{Prefix} Adept Error|Damage type not found. Please use: `-ea <damage type>`\nValid damage types: `{out.join(str(x) for x in damageTypes}`"'

vuln=[]
immune=[]
resist=[]

if combat():
  if args.get('t'):
  targets=args.get('t')
  targets= [x for x in targets if combat().get_combatant(x)]
  safe_to_neutral = True
  for x in targets:
    if combat.get_combatant(x).resistances.is_vulnerable(dType):
      safe_to_neutral=False
    if combat.get_combatant(x).resistances.is_immune(dType):
      safe_to_neutral=False
  if:
  else:
    out+=f' -mi 2 '
    out+=f' -f "Elemental Adept: '
else:
  out+=f" -mi 2 "
  out+=f"


spellMod=0

errMsg = f""" -title "**Use:
`!a {chosenWeap} -ts <abilityScore> -with <spellcastingAbilityScore>`
to set up True Strike for this character.**" """

if 'True' in args.get('with'):
  if (ch.get_cvar("tsWith")):
    spellMod = ch.stats.get_mod(ch.get_cvar('tsWith'))
  elif any(x for x in ch.spellbook.find("True Strike") if x.mod):
    spellMod=ch.spellbook.find("True Strike")[0].mod
  else:
    spellMod=ch.spellbook.spell_mod
elif args.get('with'):
  tempName=args.get('with')[0]
  for stat in ['strength', 'dexterity', 'constitution', 'intelligence', 'wisdom', 'charisma']:
    if tempName in stat:
      tempName = stat
      ch.set_cvar("tsWith",val=tempName)
      spellMod = ch.stats.get_mod(ch.get_cvar('tsWith'))
      out+= f' -f "**True Strike Casting Stat for {ch.name} set to {stat}**|inline" '
      break
  if (ch.get_cvar('tsWith')):
    spellMod = ch.stats.get_mod(ch.get_cvar('tsWith'))
  else:
    return errMsg
else:
  if (ch.get_cvar('tsWith')):
    spellMod = ch.stats.get_mod(ch.get_cvar('tsWith'))
  else:
    return errMsg


mod=args.get('ts')
errMsg=f"""-title "**Use `!a {chosenWeap} -ts <ability score>` to set up True Strike for this weapon**" """

if 'True' in mod:
  if (ch.get_cvar("ts"+varName)):
    mod=ch.get_cvar("ts"+varName)
  else:
    return errMsg
else:
  mod=mod[0]
  for stat in ['strength', 'dexterity', 'constitution', 'intelligence', 'wisdom', 'charisma']:
    if mod in stat:
      mod = stat
      ch.set_cvar('ts'+varName,val=stat)
      out+= f' -f "**True Strike Stat for {chosenWeap} set to {mod}**|You should now be good to use this weapon with `-ts` by itself!|inline" '
      break
  if (ch.get_cvar('ts'+varName)):
    mod=ch.get_cvar('ts'+varName)
  else:
    return errMsg

modVal = ch.stats.get_mod(mod)

out+=f"""-b "-{modVal}[{mod}]+{spellMod}[{ch.get_cvar('tsWith') if ch.get_cvar('tsWith') else 'spellmod'}]" """
out+=f'-d "-{modVal}+{spellMod}" '
if level >4:
 out+=f"""-d \"{'1d6' if level < 11 else '2d6' if level < 17 else '3d6'}[radiant]\" """
out+=f""" -f \"True Strike|Guided by a flash of magical insight, you make one attack with the weapon used in the spell’s casting. The attack uses your spellcasting ability for the attack and damage rolls instead of using Strength or Dexterity. If the attack deals damage, it can be Radiant damage or the weapon’s normal damage type (your choice).

***Cantrip Upgrade***. Whether you deal Radiant damage or the weapon’s normal damage type, the attack deals extra Radiant damage when you reach levels 5 (1d6), 11 (2d6), and 17 (3d6)|inline\" """
out+=f'-title "{ch.name} attacks with a {chosenWeap} using [True Strike][<https://avrae.io/dashboard/workshop/66f5e02e9ffe45e0fd7e6297>]!" '
return out
</drac2>